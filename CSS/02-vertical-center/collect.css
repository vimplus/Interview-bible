/***
 * 1.使用 verticle-align:middle 实现CSS垂直居中（inline-block）
 * 2.使用绝对定位和负外边距对块级元素进行垂直居中（固定高度）
 * 3.使用绝对定位和 transform（不固定高度）
 * 4.使用 flex 布局
 * 5.使用绝对定位结合 margin:auto
 * 6.使用 padding 实现子元素的垂直居中
 * 7.使用 table-cell 和 vertical-align 对容器里的文字进行垂直居中
 * 8.使用 line-height 实现CSS垂直居中。
 ***/


/***
 * 1.使用 verticle-align:middle 实现CSS垂直居中（inline-block）
 ***/
.parent {
    font-size: 0;
}
.parent::after {
    display: inline-block;
    content: "";
    width: 0;
    height: 100%;
    vertical-align: middle;
}
.child {
    display: inline-block;
    vertical-align: middle;
}

/***
 * 2.使用绝对定位和负外边距对块级元素进行垂直居中（固定高度）
 ***/
.parent {
    position: relative;
}
.child {
    height: 200px;
    position: absolute;
    top: 50%;
    margin-top: -100px;
}


/***
 * 3.使用绝对定位和 transform（不固定高度）
 ***/
.parent {
    position: relative;
}
.child {
    height: 200px;
    position: absolute;
    top: 50%;
    transform: translate(50%, -50%); /* y轴相对于元素自身偏移 -50% */
}


/***
 * 4-1.使用 flex 布局 （父元素设置）
 ***/
.parent {
    width: 500px;
    height: 300px;
    display: flex;
    align-items: center;    /* 垂直居中 */
}
.child {
    flex: 0 0 150px;
    height: 100px;
}

/***
 * 4-2.使用 flex 布局 （子元素设置）
 ***/
.parent {
    width: 500px;
    height: 300px;
    display: flex;
}
.child {
    flex: 0 0 150px;
    height: 100px;
    align-self: center;     /* 垂直居中 */
}

/***
 * 5.使用绝对定位结合 margin:auto
 ***/
.parent {
    position: relative;
}
.child {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
}

/***
 * 6.使用 padding 实现子元素的垂直居中（父元素不能设置高度）
 ***/
.parent {
    padding: 100px 0;
}

/***
 * 7.使用 table-cell 和 vertical-align 对容器里的文字进行垂直居中
 ***/
.parent {
    display: table-cell;
    vertical-align: middle;
}

/***
 * 8.使用 line-height 实现CSS垂直居中。
 ***/
 .parent {
    height: 300px;
    line-height: 300px;
}
.child {
    display: inline-block;
    vertical-align: middle;
    height: 50%;
    line-height: initial;
}